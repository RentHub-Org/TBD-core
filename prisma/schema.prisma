// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  wallet_address String          @id
  credits        BigInt         @default(0)
  rentedFiles    File[]
  recharges      Bills[]
  GatewayRoutes  GatewayRoutes[]
  telegramId     TelegramEndPoints[]
}

model GatewayRoutes {
  route                    String @unique @default(uuid())
  createdBy                User   @relation(fields: [createdBy_wallet_address], references: [wallet_address])
  createdBy_wallet_address String
}

model File {
  hash                     String   @id
  
  size                     BigInt
  expires_in_days          Int
  createdBy                User     @relation(fields: [createdBy_wallet_address], references: [wallet_address])
  createdBy_wallet_address String
  //for fetching status of file
  rentralStatusId          String
  updated_on               DateTime
  created_on               DateTime @default(now())
}

enum FileType {
  FILE
  IMAGE
  JSON
  TEXT
  CUSTOM
}

model Bills {
  billId                  String @id @default(uuid())
  recipient               User   @relation(fields: [createdFor_wallet_address], references: [wallet_address])
  payableAmount           BigInt
  createdFor_wallet_address String
  credits                 BigInt
  created_on              DateTime @default(now())
}

model TelegramEndPoints{
  username              String @unique()
  owner                 User @relation(fields: [nameHolder], references: [wallet_address])
  nameHolder            String
}